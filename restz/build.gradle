plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'edu.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'net.coobird:thumbnailator:0.4.20'	//이미지 처리 라이브러리로, 이미지의 크기 조정 및 변환을 쉽게

	implementation 'org.springframework.boot:spring-boot-starter-security' //Spring Security를 포함하여 애플리케이션의 보안을 설정하고 관리
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0' //spring Boot 애플리케이션에서 OpenAPI 문서화를 위한 라이브러리입니다. Swagger UI를 통해 API 문서를 자동으로 생성
	implementation 'org.springframework.boot:spring-boot-starter-validation'	//Bean Validation API를 사용하여 입력 데이터의 검증을 지원합니다.
	implementation 'org.projectlombok:lombok'	//코드 생성을 자동화하여 반복적인 작업을 줄이는 라이브러리입니다. Getter, Setter, ToString 등과 같은 메서드를 자동으로 생성합니다.
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.2'	//Spring Data JPA를 포함하여 JPA를 사용한 데이터 접근을 지원합니다.
	implementation 'mysql:mysql-connector-java:8.0.33'	//MySQL 데이터베이스에 연결하기 위한 JDBC 드라이버입니다.
	implementation 'com.zaxxer:HikariCP:5.1.0'	//JDBC Connection Pool 라이브러리로, 데이터베이스 연결을 효율적으로 관리합니다.
	implementation 'org.springframework.boot:spring-boot-starter-web'	//웹 애플리케이션 개발을 위한 Spring MVC, Jackson, 기타 웹 관련 라이브러리를 포함합니다.
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'	//JPA를 위한 타입 안전 쿼리 빌더 라이브러리입니다.

	implementation 'io.jsonwebtoken:jjwt-api:0.12.6' //JSON Web Token (JWT) 생성 및 검증을 위한 라이브러리입니다. jjwt-api는 API를 제공하고, jjwt-impl은 구현체를, jjwt-jackson은 Jackson을 통한 JSON 처리를 제공합니다.
	runtimeOnly    'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly    'io.jsonwebtoken:jjwt-jackson:0.12.6'


	compileOnly 'org.projectlombok:lombok'	//컴파일 시에만 Lombok을 사용하여 생성된 코드를 포함합니다. 런타임 시에는 필요하지 않습니다.
	developmentOnly 'org.springframework.boot:spring-boot-devtools'	//개발 중에 애플리케이션을 자동으로 재시작하거나 LiveReload를 지원하여 개발 편의성을 높입니다.
	annotationProcessor (	//컴파일 시 어노테이션 프로세서를 사용하여 Lombok, QueryDSL 등의 코드를 처리합니다.
			'jakarta.persistence:jakarta.persistence-api',
			'jakarta.annotation:jakarta.annotation-api',
			'com.querydsl:querydsl-apt:5.1.0:jakarta',
			'org.projectlombok:lombok'
	)

	//Spring Boot의 테스트 스타터를 포함하며, JUnit 플랫폼 런처와 Lombok을 테스트 환경에서도 사용합니다.
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}
